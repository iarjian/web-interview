import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.2eafe199.js";const F=JSON.parse('{"title":"面试官：如何实现文件上传？说说你的思路","description":"","frontmatter":{},"headers":[],"relativePath":"NodeJS/file_upload.md","filePath":"NodeJS/file_upload.md","lastUpdated":1694416341000}'),p={name:"NodeJS/file_upload.md"},o=l(`<h1 id="面试官-如何实现文件上传-说说你的思路" tabindex="-1">面试官：如何实现文件上传？说说你的思路 <a class="header-anchor" href="#面试官-如何实现文件上传-说说你的思路" aria-label="Permalink to &quot;面试官：如何实现文件上传？说说你的思路&quot;">​</a></h1><p><img src="https://static.vue-js.com/248a5580-ce60-11eb-85f6-6fac77c0c9b3.png" alt=""></p><h2 id="一、是什么" tabindex="-1">一、是什么 <a class="header-anchor" href="#一、是什么" aria-label="Permalink to &quot;一、是什么&quot;">​</a></h2><p>文件上传在日常开发中应用很广泛，我们发微博、发微信朋友圈都会用到了图片上传功能</p><p>因为浏览器限制，浏览器不能直接操作文件系统的，需要通过浏览器所暴露出来的统一接口，由用户主动授权发起来访问文件动作，然后读取文件内容进指定内存里，最后执行提交请求操作，将内存里的文件内容数据上传到服务端，服务端解析前端传来的数据信息后存入文件里</p><p>对于文件上传，我们需要设置请求头为<code>content-type:multipart/form-data</code></p><blockquote><p>multipart互联网上的混合资源，就是资源由多种元素组成，form-data表示可以使用HTML Forms 和 POST 方法上传文件</p></blockquote><p>结构如下：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">POST</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">t2</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">upload.do </span><span style="color:#79B8FF;">HTTP</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">1.1</span></span>
<span class="line"><span style="color:#E1E4E8;">User</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">Agent</span><span style="color:#E1E4E8;">: SOHUWapRebot</span></span>
<span class="line"><span style="color:#E1E4E8;">Accept</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">Language</span><span style="color:#E1E4E8;">: zh</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">cn,zh;q</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0.5</span></span>
<span class="line"><span style="color:#E1E4E8;">Accept</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">Charset</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">GBK</span><span style="color:#E1E4E8;">,utf</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">;q</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0.7</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">;q</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0.7</span></span>
<span class="line"><span style="color:#B392F0;">Connection</span><span style="color:#E1E4E8;">: keep</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">alive</span></span>
<span class="line"><span style="color:#E1E4E8;">Content</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">Length</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">60408</span></span>
<span class="line"><span style="color:#E1E4E8;">Content</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">Type</span><span style="color:#E1E4E8;">:multipart</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">form</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">data; boundary</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">ZnGpDtePMx0KrHh_G0X99Yef9r8JZsRJSXC</span></span>
<span class="line"><span style="color:#B392F0;">Host</span><span style="color:#E1E4E8;">: w.sohu.com</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">ZnGpDtePMx0KrHh_G0X99Yef9r8JZsRJSXC</span></span>
<span class="line"><span style="color:#E1E4E8;">Content</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">Disposition</span><span style="color:#E1E4E8;">: form</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">data; name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;city&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">Santa colo</span></span>
<span class="line"><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">ZnGpDtePMx0KrHh_G0X99Yef9r8JZsRJSXC</span></span>
<span class="line"><span style="color:#E1E4E8;">Content</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">Disposition</span><span style="color:#E1E4E8;">: form</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">data;name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;desc&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">Content</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">Type</span><span style="color:#E1E4E8;">: text</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">plain; charset</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">UTF</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">8</span></span>
<span class="line"><span style="color:#E1E4E8;">Content</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">Transfer</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">Encoding</span><span style="color:#E1E4E8;">: 8bit</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">ZnGpDtePMx0KrHh_G0X99Yef9r8JZsRJSXC</span></span>
<span class="line"><span style="color:#E1E4E8;">Content</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">Disposition</span><span style="color:#E1E4E8;">: form</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">data;name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;pic&quot;</span><span style="color:#E1E4E8;">; filename</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;photo.jpg&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">Content</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">Type</span><span style="color:#E1E4E8;">: application</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">octet</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">stream</span></span>
<span class="line"><span style="color:#E1E4E8;">Content</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">Transfer</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">Encoding</span><span style="color:#E1E4E8;">: binary</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">...</span><span style="color:#E1E4E8;"> binary data </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> the jpg </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">ZnGpDtePMx0KrHh_G0X99Yef9r8JZsRJSXC</span><span style="color:#F97583;">--</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">POST</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">t2</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">upload.do </span><span style="color:#005CC5;">HTTP</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">1.1</span></span>
<span class="line"><span style="color:#24292E;">User</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">Agent</span><span style="color:#24292E;">: SOHUWapRebot</span></span>
<span class="line"><span style="color:#24292E;">Accept</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">Language</span><span style="color:#24292E;">: zh</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">cn,zh;q</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.5</span></span>
<span class="line"><span style="color:#24292E;">Accept</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">Charset</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">GBK</span><span style="color:#24292E;">,utf</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">;q</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.7</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">;q</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.7</span></span>
<span class="line"><span style="color:#6F42C1;">Connection</span><span style="color:#24292E;">: keep</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">alive</span></span>
<span class="line"><span style="color:#24292E;">Content</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">Length</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">60408</span></span>
<span class="line"><span style="color:#24292E;">Content</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">Type</span><span style="color:#24292E;">:multipart</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">form</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">data; boundary</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">ZnGpDtePMx0KrHh_G0X99Yef9r8JZsRJSXC</span></span>
<span class="line"><span style="color:#6F42C1;">Host</span><span style="color:#24292E;">: w.sohu.com</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">--</span><span style="color:#24292E;">ZnGpDtePMx0KrHh_G0X99Yef9r8JZsRJSXC</span></span>
<span class="line"><span style="color:#24292E;">Content</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">Disposition</span><span style="color:#24292E;">: form</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">data; name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;city&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Santa colo</span></span>
<span class="line"><span style="color:#D73A49;">--</span><span style="color:#24292E;">ZnGpDtePMx0KrHh_G0X99Yef9r8JZsRJSXC</span></span>
<span class="line"><span style="color:#24292E;">Content</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">Disposition</span><span style="color:#24292E;">: form</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">data;name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;desc&quot;</span></span>
<span class="line"><span style="color:#24292E;">Content</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">Type</span><span style="color:#24292E;">: text</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">plain; charset</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">UTF</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">8</span></span>
<span class="line"><span style="color:#24292E;">Content</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">Transfer</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">Encoding</span><span style="color:#24292E;">: 8bit</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#D73A49;">--</span><span style="color:#24292E;">ZnGpDtePMx0KrHh_G0X99Yef9r8JZsRJSXC</span></span>
<span class="line"><span style="color:#24292E;">Content</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">Disposition</span><span style="color:#24292E;">: form</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">data;name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;pic&quot;</span><span style="color:#24292E;">; filename</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;photo.jpg&quot;</span></span>
<span class="line"><span style="color:#24292E;">Content</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">Type</span><span style="color:#24292E;">: application</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">octet</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">stream</span></span>
<span class="line"><span style="color:#24292E;">Content</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">Transfer</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">Encoding</span><span style="color:#24292E;">: binary</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">...</span><span style="color:#24292E;"> binary data </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> the jpg </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#D73A49;">--</span><span style="color:#24292E;">ZnGpDtePMx0KrHh_G0X99Yef9r8JZsRJSXC</span><span style="color:#D73A49;">--</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p><code>boundary</code>表示分隔符，如果要上传多个表单项，就要使用<code>boundary</code>分割，每个表单项由<code>———XXX</code>开始，以<code>———XXX</code>结尾</p><p>而<code>xxx</code>是即时生成的字符串，用以确保整个分隔符不会在文件或表单项的内容中出现</p><p>每个表单项必须包含一个 <code>Content-Disposition</code> 头，其他的头信息则为可选项， 比如 <code>Content-Type</code></p><p><code>Content-Disposition</code> 包含了 <code>type </code>和 一个名字为<code>name</code>的 <code>parameter</code>，<code>type</code> 是 <code>form-data</code>，<code>name </code>参数的值则为表单控件（也即 field）的名字，如果是文件，那么还有一个 <code>filename </code>参数，值就是文件名</p><div class="language-kotlin vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Content</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">Disposition: </span><span style="color:#B392F0;">form</span><span style="color:#F97583;">-data</span><span style="color:#E1E4E8;">; name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;user&quot;</span><span style="color:#E1E4E8;">; filename</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;logo.png&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Content</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">Disposition: </span><span style="color:#6F42C1;">form</span><span style="color:#D73A49;">-data</span><span style="color:#24292E;">; name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">; filename</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;logo.png&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>至于使用<code>multipart/form-data</code>，是因为文件是以二进制的形式存在，其作用是专门用于传输大型二进制数据，效率高</p><h3 id="二、如何实现" tabindex="-1">二、如何实现 <a class="header-anchor" href="#二、如何实现" aria-label="Permalink to &quot;二、如何实现&quot;">​</a></h3><p>关于文件的上传的上传，我们可以分成两步骤：</p><ul><li>文件的上传</li><li>文件的解析</li></ul><h3 id="文件上传" tabindex="-1">文件上传 <a class="header-anchor" href="#文件上传" aria-label="Permalink to &quot;文件上传&quot;">​</a></h3><p>传统前端文件上传的表单结构如下：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">form</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">action</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;http://localhost:8080/api/upload&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">method</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;post&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">enctype</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;multipart/form-data&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;file&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;file&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;file&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">multiple</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;multiple&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;submit&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;提交&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">form</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">form</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">action</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;http://localhost:8080/api/upload&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">method</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;post&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">enctype</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;multipart/form-data&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">input</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;file&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;file&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;file&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">multiple</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;multiple&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">input</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;submit&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;提交&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">form</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>action</code> 就是我们的提交到的接口，<code>enctype=&quot;multipart/form-data&quot;</code> 就是指定上传文件格式，<code>input</code> 的 <code>name</code> 属性一定要等于<code>file</code></p><h3 id="文件解析" tabindex="-1">文件解析 <a class="header-anchor" href="#文件解析" aria-label="Permalink to &quot;文件解析&quot;">​</a></h3><p>在服务器中，这里采用<code>koa2</code>中间件的形式解析上传的文件数据，分别有下面两种形式：</p><ul><li>koa-body</li><li>koa-multer</li></ul><h4 id="koa-body" tabindex="-1">koa-body <a class="header-anchor" href="#koa-body" aria-label="Permalink to &quot;koa-body&quot;">​</a></h4><p>安装依赖</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install koa</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">body</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install koa</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">body</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>引入<code>koa-body</code>中间件</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">koaBody</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;koa-body&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">koaBody</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    multipart: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    formidable: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        maxFileSize: </span><span style="color:#79B8FF;">200</span><span style="color:#F97583;">*</span><span style="color:#79B8FF;">1024</span><span style="color:#F97583;">*</span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 设置上传文件大小最大限制，默认2M</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">koaBody</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;koa-body&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">koaBody</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    multipart: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    formidable: {</span></span>
<span class="line"><span style="color:#24292E;">        maxFileSize: </span><span style="color:#005CC5;">200</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">1024</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 设置上传文件大小最大限制，默认2M</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>获取上传的文件</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ctx.request.files.file; </span><span style="color:#6A737D;">// 获取上传文件</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">file</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ctx.request.files.file; </span><span style="color:#6A737D;">// 获取上传文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>获取文件数据后，可以通过<code>fs</code>模块将文件保存到指定目录</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">router.</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/uploadfile&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">ctx</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">next</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 上传单个文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ctx.request.files.file; </span><span style="color:#6A737D;">// 获取上传文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 创建可读流</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">reader</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> fs.</span><span style="color:#B392F0;">createReadStream</span><span style="color:#E1E4E8;">(file.path);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> filePath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(__dirname, </span><span style="color:#9ECBFF;">&#39;public/upload/&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`/\${</span><span style="color:#E1E4E8;">file</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">name</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 创建可写流</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">upStream</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> fs.</span><span style="color:#B392F0;">createWriteStream</span><span style="color:#E1E4E8;">(filePath);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 可读流通过管道写入可写流</span></span>
<span class="line"><span style="color:#E1E4E8;">  reader.</span><span style="color:#B392F0;">pipe</span><span style="color:#E1E4E8;">(upStream);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ctx.body </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;上传成功！&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">router.</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/uploadfile&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">ctx</span><span style="color:#24292E;">, </span><span style="color:#E36209;">next</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 上传单个文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">file</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ctx.request.files.file; </span><span style="color:#6A737D;">// 获取上传文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 创建可读流</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">reader</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fs.</span><span style="color:#6F42C1;">createReadStream</span><span style="color:#24292E;">(file.path);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> filePath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(__dirname, </span><span style="color:#032F62;">&#39;public/upload/&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`/\${</span><span style="color:#24292E;">file</span><span style="color:#032F62;">.</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 创建可写流</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">upStream</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fs.</span><span style="color:#6F42C1;">createWriteStream</span><span style="color:#24292E;">(filePath);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 可读流通过管道写入可写流</span></span>
<span class="line"><span style="color:#24292E;">  reader.</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(upStream);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ctx.body </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;上传成功！&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="koa-multer" tabindex="-1">koa-multer <a class="header-anchor" href="#koa-multer" aria-label="Permalink to &quot;koa-multer&quot;">​</a></h4><p>安装依赖：</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install koa</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">multer</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install koa</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">multer</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用 <code>multer</code> 中间件实现文件上传</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">storage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> multer.</span><span style="color:#B392F0;">diskStorage</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">destination</span><span style="color:#E1E4E8;">: (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">file</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">cb</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">cb</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;./upload/&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">filename</span><span style="color:#E1E4E8;">: (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">file</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">cb</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">cb</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">extname</span><span style="color:#E1E4E8;">(file.originalname))</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">upload</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">multer</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  storage</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fileRouter</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Router</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">fileRouter.</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/upload&quot;</span><span style="color:#E1E4E8;">, upload.</span><span style="color:#B392F0;">single</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;file&#39;</span><span style="color:#E1E4E8;">), (</span><span style="color:#FFAB70;">ctx</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">next</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(ctx.req.file); </span><span style="color:#6A737D;">// 获取文件</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(fileRouter.</span><span style="color:#B392F0;">routes</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">storage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> multer.</span><span style="color:#6F42C1;">diskStorage</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">destination</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">req</span><span style="color:#24292E;">, </span><span style="color:#E36209;">file</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cb</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">cb</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;./upload/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">filename</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">req</span><span style="color:#24292E;">, </span><span style="color:#E36209;">file</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cb</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">cb</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, Date.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">extname</span><span style="color:#24292E;">(file.originalname))</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">upload</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">multer</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  storage</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fileRouter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Router</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">fileRouter.</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/upload&quot;</span><span style="color:#24292E;">, upload.</span><span style="color:#6F42C1;">single</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;file&#39;</span><span style="color:#24292E;">), (</span><span style="color:#E36209;">ctx</span><span style="color:#24292E;">, </span><span style="color:#E36209;">next</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(ctx.req.file); </span><span style="color:#6A737D;">// 获取文件</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(fileRouter.</span><span style="color:#6F42C1;">routes</span><span style="color:#24292E;">());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-label="Permalink to &quot;参考文献&quot;">​</a></h2><ul><li><a href="https://segmentfault.com/a/1190000037411957" target="_blank" rel="noreferrer">https://segmentfault.com/a/1190000037411957</a></li><li><a href="https://www.jianshu.com/p/29e38bcc8a1d" target="_blank" rel="noreferrer">https://www.jianshu.com/p/29e38bcc8a1d</a></li></ul>`,41),e=[o];function t(c,r,y,E,i,u){return n(),a("div",null,e)}const b=s(p,[["render",t]]);export{F as __pageData,b as default};
