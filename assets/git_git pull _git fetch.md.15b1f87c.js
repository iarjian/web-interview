import{_ as e,o as s,c as a,Q as t}from"./chunks/framework.2eafe199.js";const m=JSON.parse('{"title":"说说对git pull 和 git fetch 的理解？有什么区别？","description":"","frontmatter":{},"headers":[],"relativePath":"git/git pull _git fetch.md","filePath":"git/git pull _git fetch.md","lastUpdated":1694418005000}'),l={name:"git/git pull _git fetch.md"},p=t('<h1 id="说说对git-pull-和-git-fetch-的理解-有什么区别" tabindex="-1">说说对git pull 和 git fetch 的理解？有什么区别？ <a class="header-anchor" href="#说说对git-pull-和-git-fetch-的理解-有什么区别" aria-label="Permalink to &quot;说说对git pull 和 git fetch 的理解？有什么区别？&quot;">​</a></h1><p><img src="https://static.vue-js.com/cc90c050-fac2-11eb-991d-334fd31f0201.png" alt=""></p><h2 id="一、是什么" tabindex="-1">一、是什么 <a class="header-anchor" href="#一、是什么" aria-label="Permalink to &quot;一、是什么&quot;">​</a></h2><p>先回顾两个命令的定义</p><ul><li>git fetch 命令用于从另一个存储库下载对象和引用</li><li>git pull 命令用于从另一个存储库或本地分支获取并集成(整合)</li></ul><p>再来看一次<code>git</code>的工作流程图，如下所示：</p><p><img src="https://static.vue-js.com/d523ba60-fac2-11eb-991d-334fd31f0201.png" alt=""></p><p>可以看到，<code>git fetch</code>是将远程主机的最新内容拉到本地，用户在检查了以后决定是否合并到工作本机分支中</p><p>而<code>git pull</code> 则是将远程主机的最新内容拉下来后直接合并，即：<code>git pull = git fetch + git merge</code>，这样可能会产生冲突，需要手动解决</p><p>在我们本地的<code>git</code>文件中对应也存储了<code>git</code>本地仓库分支的<code>commit ID </code>和 跟踪的远程分支的<code>commit ID</code>，对应文件如下：</p><ul><li>.git/refs/head/[本地分支]</li><li>.git/refs/remotes/[正在跟踪的分支]</li></ul><p>使用 <code>git fetch</code>更新代码，本地的库中<code>master</code>的<code>commitID</code>不变</p><p>但是与<code>git</code>上面关联的那个<code>orign/master</code>的<code>commit ID</code>发生改变</p><p>这时候我们本地相当于存储了两个代码的版本号，我们还要通过<code>merge</code>去合并这两个不同的代码版本</p><p><img src="https://static.vue-js.com/fd23ff70-fb12-11eb-bc6f-3f06e1491664.png" alt=""></p><p>也就是<code>fetch</code>的时候本地的<code>master</code>没有变化，但是与远程仓关联的那个版本号被更新了，接下来就是在本地<code>merge</code>合并这两个版本号的代码</p><p>相比之下，使用<code>git pull</code>就更加简单粗暴，会将本地的代码更新至远程仓库里面最新的代码版本，如下图：</p><p><img src="https://static.vue-js.com/091b8140-fb13-11eb-bc6f-3f06e1491664.png" alt=""></p><h2 id="二、用法" tabindex="-1">二、用法 <a class="header-anchor" href="#二、用法" aria-label="Permalink to &quot;二、用法&quot;">​</a></h2><p>一般远端仓库里有新的内容更新，当我们需要把新内容下载的时候，就使用到<code>git pull</code>或者<code>git fetch</code>命令</p><h3 id="fetch" tabindex="-1">fetch <a class="header-anchor" href="#fetch" aria-label="Permalink to &quot;fetch&quot;">​</a></h3><p>用法如下：</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">git fetch </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">远程主机名</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">远程分支名</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">本地分支名</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">git fetch </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">远程主机名</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">远程分支名</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">本地分支名</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例如从远程的<code>origin</code>仓库的<code>master</code>分支下载代码到本地并新建一个<code>temp</code>分支</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">git fetch origin master:temp</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">git fetch origin master:temp</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果上述没有冒号，则表示将远程<code>origin</code>仓库的<code>master</code>分支拉取下来到本地当前分支</p><p>这里<code>git fetch</code>不会进行合并，执行后需要手动执行<code>git merge</code>合并，如下：</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">git merge temp</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">git merge temp</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="pull" tabindex="-1">pull <a class="header-anchor" href="#pull" aria-label="Permalink to &quot;pull&quot;">​</a></h3><p>两者的用法十分相似，<code>pull</code>用法如下：</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">git pull </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">远程主机名</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">远程分支名</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">本地分支名</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">git pull </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">远程主机名</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">远程分支名</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">本地分支名</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例如将远程主机<code>origin</code>的<code>master</code>分支拉取过来，与本地的<code>branchtest</code>分支合并，命令如下：</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">git pull origin master:branchtest</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">git pull origin master:branchtest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>同样如果上述没有冒号，则表示将远程<code>origin</code>仓库的<code>master</code>分支拉取下来与本地当前分支合并</p><h2 id="三、区别" tabindex="-1">三、区别 <a class="header-anchor" href="#三、区别" aria-label="Permalink to &quot;三、区别&quot;">​</a></h2><p>相同点：</p><ul><li>在作用上他们的功能是大致相同的，都是起到了更新代码的作用</li></ul><p>不同点：</p><ul><li>git pull是相当于从远程仓库获取最新版本，然后再与本地分支merge，即git pull = git fetch + git merge</li><li>相比起来，git fetch 更安全也更符合实际要求，在 merge 前，我们可以查看更新情况，根据实际情况再决定是否合并</li></ul><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-label="Permalink to &quot;参考文献&quot;">​</a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/123370920" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/123370920</a></li><li><a href="https://segmentfault.com/a/1190000017030384" target="_blank" rel="noreferrer">https://segmentfault.com/a/1190000017030384</a></li><li><a href="https://juejin.cn/post/6844903921794859021" target="_blank" rel="noreferrer">https://juejin.cn/post/6844903921794859021</a></li></ul>',41),o=[p];function c(n,i,r,d,g,h){return s(),a("div",null,o)}const b=e(l,[["render",c]]);export{m as __pageData,b as default};
